name: ci

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop
  workflow_dispatch:

env:
  UV_VERSION: "0.6.5"
  PYTHONPATH: "src"
  PYTHONUNBUFFERED: "1"
  UV_CACHE_DIR: /tmp/.uv-cache

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  test:
    name: Test Python 3.8
    runs-on: ubuntu-24.04
    permissions:
      contents: read
      checks: write
      pull-requests: write

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.8
        uses: actions/setup-python@v5
        with:
          python-version: '3.8'

      - name: Set up uv
        run: curl -LsSf https://astral.sh/uv/${{ env.UV_VERSION }}/install.sh | sh

      - name: Configure uv cache path
        run: echo "UV_CACHE_DIR=${{ env.UV_CACHE_DIR }}" >> $GITHUB_ENV

      - name: Cache uv dependencies
        uses: actions/cache@v4
        with:
          path: ${{ env.UV_CACHE_DIR }}
          key: uv-${{ runner.os }}-py3.8-${{ hashFiles('uv.lock') }}
          restore-keys: |
            uv-${{ runner.os }}-py3.8-

      - name: Install dependencies
        run: uv sync --all-extras --dev --frozen

      - name: Run tests
        run: |
          mkdir -p test-results
          uv run pytest tests --cov=src --cov-report=xml --cov-report=term-missing --junitxml=test-results/junit.xml

      - name: Minimize cache
        run: uv cache prune --ci

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: test-results/junit.xml
          check_name: Test Results (Python 3.8)
          comment_mode: always

      - name: Upload test results artifact
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results-py3.8
          path: test-results/
          retention-days: 30

      - name: Upload coverage report artifact
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: coverage-report-py3.8
          path: coverage.xml
          retention-days: 30

  build:
    name: Build Package
    needs: test
    runs-on: ubuntu-24.04
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python 3.8
        uses: actions/setup-python@v5
        with:
          python-version: '3.8'

      - name: Set up uv
        run: curl -LsSf https://astral.sh/uv/${{ env.UV_VERSION }}/install.sh | sh

      - name: Configure uv cache path
        run: echo "UV_CACHE_DIR=${{ env.UV_CACHE_DIR }}" >> $GITHUB_ENV

      - name: Cache uv build dependencies
        uses: actions/cache@v4
        with:
          path: ${{ env.UV_CACHE_DIR }}
          key: uv-build-${{ runner.os }}-py3.8-${{ hashFiles('**/pyproject.toml') }}
          restore-keys: |
            uv-build-${{ runner.os }}-py3.8-

      - name: Install build dependencies
        run: |
          uv venv .build-venv --python $(which python)
          uv pip install --system build twine ruff mypy --python .build-venv/bin/python

      - name: Build and verify package
        run: |
          uv run --python .build-venv/bin/python ruff check src tests
          uv run --python .build-venv/bin/python mypy src tests
          uv run --python .build-venv/bin/python python -m build
          uv run --python .build-venv/bin/python twine check dist/*

      - name: Minimize build cache
        run: uv cache prune --ci

      - name: Upload package artifact
        uses: actions/upload-artifact@v4
        with:
          name: python-package-${{ github.sha }}
          path: dist/

  deploy:
    name: Deploy to PyPI
    needs: build
    runs-on: ubuntu-24.04
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    environment:
      name: pypi
      url: https://pypi.org/p/pyfinquant 
    permissions:
      packages: write 

    steps:
      - name: Download built package artifact
        uses: actions/download-artifact@v4
        with:
          name: python-package-${{ github.sha }}
          path: dist

      - name: Set up uv
        run: curl -LsSf https://astral.sh/uv/${{ env.UV_VERSION }}/install.sh | sh

      - name: Install Twine
        run: uv pip install twine

      - name: Publish package distributions to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: uv run twine upload dist/* --verbose
=======
name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Install UV
      run: |
        curl -LsSf https://astral.sh/uv/install.sh | sh
        echo "$HOME/.cargo/bin" >> $GITHUB_PATH
        
    - name: Load cached dependencies
      id: cached-dependencies
      uses: actions/cache@v3
      with:
        path: |
          .venv
          uv.lock
        key: ${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('**/pyproject.toml') }}
        
    - name: Install dependencies
      if: steps.cached-dependencies.outputs.cache-hit != 'true'
      run: |
        uv venv
        uv pip install -e .
        uv pip install -e ".[dev]"
      
    - name: Run tests
      run: |
        source .venv/bin/activate
        pytest --cov=pyfinquant --cov-report=xml
      
    - name: Upload coverage
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: true
        
    - name: Run linting
      run: |
        source .venv/bin/activate
        black --check .
        isort --check .
        flake8 .
        mypy . 
>>>>>>> 77d228180a2f5aa0c116c49388d15823995d88c1
